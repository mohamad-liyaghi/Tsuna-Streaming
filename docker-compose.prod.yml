version: '3.9'

x-environment: &COMMON_VARS
    DJANGO_SETTINGS_MODULE: 'config.settings.production'

services:

  backend:
    container_name: tsuna-streaming-backend
    command: sh ./docker/production/commands/setup.sh
    restart: on-failure
    build:
      context: .
      dockerfile: ./backend/docker/production/Dockerfile
    env_file:
      - backend/.env.prod
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/backend
      - ./backend/.env.prod:/backend/.env
    environment:
      *COMMON_VARS
    depends_on:
      - postgres
      - redis
      - smtp4dev

  postgres:
    image: postgres:11
    container_name: tsuna-streaming-database
    restart: on-failure
    env_file:
      - backend/.env.prod
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  test_postgres:
    image: postgres:11
    container_name: tsuna-streaming-test-database
    restart: on-failure
    env_file:
      - backend/.env.prod
    ports:
      - "5433:5432"

  pgadmin:
    image: dpage/pgadmin4
    container_name: tsuna-streaming-pgadmin
    restart: on-failure
    env_file:
      - backend/.env.prod
    ports:
      - "5050:80"
    volumes:
      - /data/pgadmin:/var/lib/pgadmin/data

  redis:
    image: redis:6.2-alpine
    container_name: tsuna-streaming-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  test_redis:
    image: redis:6.2-alpine
    container_name: tsuna-streaming-test-redis
    restart: always
    ports:
      - "6380:6379"

  smtp4dev:
    image: rnwood/smtp4dev:v3
    container_name: tsuna-streaming-smtp4dev
    ports:
      - "5000:80"
      - "25:25"
    restart: always

  celery:
    container_name: tsuna-streaming-celery
    command: sh ./docker/production/commands/celery.sh
    build:
      context: .
      dockerfile: ./backend/docker/production/Dockerfile
    volumes:
      - ./backend:/backend
    env_file:
      - backend/.env.prod
    environment:
      *COMMON_VARS

  celery-beat:
    build:
      context: .
      dockerfile: backend/docker/production/Dockerfile
    container_name: tsuna-streaming-celery-beat
    command: sh ./docker/production/commands/celery-beat.sh
    volumes:
      - ./backend:/backend
    env_file:
        - backend/.env.prod
    environment:
      *COMMON_VARS

  flower:
    container_name: tsuna-streaming-flower
    build:
      context: .
      dockerfile: ./backend/docker/production/Dockerfile
    command: sh ./docker/production/commands/flower.sh
    env_file:
      - backend/.env.prod
    ports:
      - "5555:5555"
    volumes:
      - ./backend:/backend
    environment:
      *COMMON_VARS

  # frontend:
  #   extends:
  #     file: frontend/docker-compose.yml
  #     service: frontend

volumes:
  postgres-data:
  redis-data: